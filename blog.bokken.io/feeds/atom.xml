<?xml version="1.0" encoding="utf-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link
    rel="self"
    type="application/atom+xml"
    href="https://blog.bokken.io/feeds/atom.xml"
  />
  <title>blog.bokken.io</title>
  <link href="https://blog.bokken.io" />
  <updated>2022-11-24T06:03:55.903Z</updated>
  <author>
    <name>bokken</name>
  </author>
  <id>https://blog.bokken.io</id>

  
  <entry>
    <title>Progressive Web App 化する最低限の設定</title>
    <link
      href="https://blog.bokken.io/articles/2020-10-26/how-to-develop-minimal-pwa-app.html"
    />
    <id
    >https://blog.bokken.io/articles/2020-10-26/how-to-develop-minimal-pwa-app.html</id>
    <updated>2020-10-25T15:20:12.449Z</updated>
    <summary
      type="html"
    >Progressive Web App (PWA) の勉強がてら &lt;code&gt;https://blog.bokken.io&lt;/code&gt; を PWA 化した。本記事では、その内容をまとめておきたい。</summary>
  </entry>
  
  <entry>
    <title>Web サイトとして記載しておくべきプライバシーポリシーは何か</title>
    <link
      href="https://blog.bokken.io/articles/2020-10-05/privacy-policy-note.html"
    />
    <id>https://blog.bokken.io/articles/2020-10-05/privacy-policy-note.html</id>
    <updated>2020-10-11T14:10:01.421Z</updated>
    <summary
      type="html"
    >自分自身で Web サイトを作る際に、プライバシーポリシーをどのように扱うべきか、どのように記載するのがよいのかを考えて記載することとした。昨今の GDPR などと合わせて最終的にどのようなプライバシーポリシーとなったのかを紹介したい。</summary>
  </entry>
  
  <entry>
    <title>HTML parser を書いてるときに出会った Web 標準仕様の話</title>
    <link
      href="https://blog.bokken.io/articles/2020-09-30/html-parser-good-story.html"
    />
    <id
    >https://blog.bokken.io/articles/2020-09-30/html-parser-good-story.html</id>
    <updated>2020-10-01T21:55:44.591Z</updated>
    <summary
      type="html"
    >ブラウザをスクラッチで書いている。そのときに HTML の標準を読みながらブラウザを書
いているそのときに仕様の不備のように疑われる挙動に出会った。内容について調査しているうちにということを再認識できたので、その内容について紹介したい。</summary>
  </entry>
  
  <entry>
    <title>生産性アップのための一工夫</title>
    <link
      href="https://blog.bokken.io/articles/2020-09-20/my-awesome-tools.html"
    />
    <id>https://blog.bokken.io/articles/2020-09-20/my-awesome-tools.html</id>
    <updated>2020-09-20T07:03:20.594Z</updated>
    <summary
      type="html"
    >最近生産性アップのためにやっていてよかったなと思うことがあったので紹介したい。要点は下記である。プロジェクト内での開発において、特定のコマンド列による操作を繰り返すことがよくある。例えば DB の初期データのインサート、テストコマンドの実行などである。コマンド列にすると下記のようなコマンドである。</summary>
  </entry>
  
  <entry>
    <title>Weblog をはじめる</title>
    <link href="https://blog.bokken.io/articles/2020-09-06/hello-world.html" />
    <id>https://blog.bokken.io/articles/2020-09-06/hello-world.html</id>
    <updated>2020-09-19T17:54:07.280Z</updated>
    <summary
      type="html"
    >もともと&lt;a href=&#34;https://negi-works.hatenablog.com/&#34;&gt;昔にブログ&lt;/a&gt;を書いていたが、
ブログとしてアウトプットをする時間を取らず更新が滞ってしまっていた。</summary>
  </entry>
  
  <entry>
    <title>Chromium をビルド・テストする方法とその実行時間の備忘録</title>
    <link
      href="https://blog.bokken.io/articles/2021-02-28/how-to-build-chromium.html"
    />
    <id
    >https://blog.bokken.io/articles/2021-02-28/how-to-build-chromium.html</id>
    <updated>2021-02-28T14:05:32.978Z</updated>
    <summary
      type="html"
    >趣味でブラウザを作っている延長で、 Chromium をビルドしてテストを走らせて遊んでいる。その際、ビルド、実行に必要なリンクが各所にあって難しいなと感じたので、この記事にまとめて備忘録としておきたい。</summary>
  </entry>
  
  <entry>
    <title>Progressive Web App 化する最低限の設定</title>
    <link
      href="https://blog.bokken.io/articles/2021-02-28/how-to-develop-minimal-pwa-app.html"
    />
    <id
    >https://blog.bokken.io/articles/2021-02-28/how-to-develop-minimal-pwa-app.html</id>
    <updated>2021-02-28T13:58:22.052Z</updated>
    <summary
      type="html"
    >趣味でブラウザを作っている延長で、 Chromium をビルドしてテストを走らせて遊んでいる。その際、ビルド、実行に必要なリンクが各所にあって難しいなと感じたので、この記事にまとめて備忘録としておきたい。</summary>
  </entry>
  
  <entry>
    <title
    >Google Chrome の omnibox カスタム検索エンジンが使えなくなったと感じたときの tips</title>
    <link
      href="https://blog.bokken.io/articles/2021-03-04/omnibox-custom-search-engine.html"
    />
    <id
    >https://blog.bokken.io/articles/2021-03-04/omnibox-custom-search-engine.html</id>
    <updated>2021-08-16T01:03:25.366Z</updated>
    <summary
      type="html"
    >結論からいうと &lt;code&gt;chrome://flags&lt;/code&gt; の &lt;code&gt;Omnibox keyword search button&lt;/code&gt; の設定が enable になってしまったからだった。設定を戻せば引き続き使える。アップデートによって実験的に機能をいくつかのユーザに公開しているのでその影響なのだろう。</summary>
  </entry>
  
  <entry>
    <title>2021年の振り返り</title>
    <link
      href="https://blog.bokken.io/articles/2021-12-30/lookback-2021.html"
    />
    <id>https://blog.bokken.io/articles/2021-12-30/lookback-2021.html</id>
    <updated>2021-12-30T04:27:11.988Z</updated>
    <summary type="html">2021年がもう終わろうとしているので振り返りをしたい。
テックよりの話とライフイベントよりな話の両方でつらつらとまとめてみる。例年は本を読んだり、自分でプログラムを書いたりして一人で満足しているだけだったのだが、
今年はいつもに比べて対外的な活動、人と関わりがある活動を進めていこうとしてもがいていた年だった。</summary>
  </entry>
  
  <entry>
    <title>きれいなコミットメッセージとは</title>
    <link
      href="https://blog.bokken.io/articles/2022-01-01/a-clean-commit-message.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-01-01/a-clean-commit-message.html</id>
    <updated>2021-12-31T16:49:37.912Z</updated>
    <summary
      type="html"
    >最近、大きなコードベースを触る機会が増えてきれいなコミットメッセージについて考える事が増えた。
きれいなコミットメッセージの定義は様々あると思うが、筆者は下記がきれいなコミットメッセージに必要なことだと考えている。</summary>
  </entry>
  
  <entry>
    <title
    >Chromium のバグを直しているときに知った HTTP ヘッダ関連の Web 標準の読み方</title>
    <link
      href="https://blog.bokken.io/articles/2022-02-28/investigate-chromium-cors-header-parse-failure.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-02-28/investigate-chromium-cors-header-parse-failure.html</id>
    <updated>2022-02-28T12:55:53.455Z</updated>
    <summary type="html">最近、Chromium へのコントリビューション活動をしている。
直近で Chromium のバグ fix のために仕様を読んでいて面白いなと思ったことがあったので共有したい。具体的に取り組んでいたのは、&lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=978146&#34;&gt;こちらのバグ&lt;/a&gt;である。</summary>
  </entry>
  
  <entry>
    <title>Web 標準を読む会</title>
    <link
      href="https://blog.bokken.io/articles/2022-03-31/whats-new-2022-03.html"
    />
    <id>https://blog.bokken.io/articles/2022-03-31/whats-new-2022-03.html</id>
    <updated>2022-03-31T13:52:35.516Z</updated>
    <summary
      type="html"
    >最近、Web 標準を読む会を開催して、複数人で Web 標準を読んでいる。やっていることはシンプルで、 &lt;a href=&#34;https://fetch.spec.whatwg.org/&#34;&gt;Fetch Standard&lt;/a&gt; を DeepL で日本語に翻訳している文章を参加者が順番に音読する。
そしてその内容を読み解くというものだ。</summary>
  </entry>
  
  <entry>
    <title>働いているけど Google Summer of Code (GSoC) に応募した</title>
    <link
      href="https://blog.bokken.io/articles/2022-04-30/apply-google-summer-of-code.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-04-30/apply-google-summer-of-code.html</id>
    <updated>2022-04-30T08:00:59.735Z</updated>
    <summary
      type="html"
    >今年から &lt;a href=&#34;https://opensource.googleblog.com/2021/11/expanding-google-summer-of-code-in-2022.html&#34;&gt;Google Summer of Code (GSoC) の応募制限が緩和&lt;/a&gt;されて、18 歳以上であれば、
誰でも応募できるようになった。</summary>
  </entry>
  
  <entry>
    <title
    >Chromium の開発時に便利な Visual Studio Code の機能拡張を作った</title>
    <link
      href="https://blog.bokken.io/articles/2022-05-21/vscode-extension-chromium-code-search-permalink.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-05-21/vscode-extension-chromium-code-search-permalink.html</id>
    <updated>2022-05-21T07:10:06.863Z</updated>
    <summary
      type="html"
    >Chromium の開発をしているときに、他の人にコードのどの部分かを説明したいことがある。そんなときに GitHub では、&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mattlott.copy-github-url&#34;&gt;Copy GitHub URL&lt;/a&gt;というプラグインで、VS Code で編集しているコードのパーマリンクを取得できるため、このパーマリンクを共有すればよい。</summary>
  </entry>
  
  <entry>
    <title>HTTP RFC Publication Study で HTTP/3 について発表しました</title>
    <link
      href="https://blog.bokken.io/articles/2022-06-30/http-rfc-publication-study.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-06-30/http-rfc-publication-study.html</id>
    <updated>2022-06-30T10:06:43.428Z</updated>
    <summary
      type="html"
    >&lt;a href=&#34;https://web-study.connpass.com/event/250730/&#34;&gt;HTTP RFC Publication Study&lt;/a&gt;に発表者として参加した。</summary>
  </entry>
  
  <entry>
    <title>GitHub permalink の URL の仕様について</title>
    <link
      href="https://blog.bokken.io/articles/2022-07-31/research-on-github-permalink.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-07-31/research-on-github-permalink.html</id>
    <updated>2022-07-31T14:21:50.950Z</updated>
    <summary
      type="html"
    >筆者は VS Code で &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mattlott.copy-github-url&#34;&gt;GitHub の permalink をコピーできる拡張機能&lt;/a&gt;をよく使っている。</summary>
  </entry>
  
  <entry>
    <title>Chromium のコミットを検索できるサイトを作った</title>
    <link
      href="https://blog.bokken.io/articles/2022-08-31/chromium-commits.html"
    />
    <id>https://blog.bokken.io/articles/2022-08-31/chromium-commits.html</id>
    <updated>2022-08-31T10:40:08.351Z</updated>
    <summary
      type="html"
    >&lt;a href=&#34;https://chromium-news.vercel.app&#34;&gt;Chromium News&lt;/a&gt; というサイトを作りました。
現状は Chromium の commit を検索できるだけのサイトだが、今後様々な情報ソースを集約したり、それらをまとめる記事を書ければと思っている。</summary>
  </entry>
  
  <entry>
    <title>Anonymous iframe とは</title>
    <link
      href="https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html</id>
    <updated>2022-09-26T14:40:19.020Z</updated>
    <summary
      type="html"
    >&lt;a href=&#34;https://wicg.github.io/anonymous-iframe/&#34;&gt;Anonymous iframe&lt;/a&gt; という仕様がある。
この仕様が何を問題意識として、何を解決するための仕様なのかをまとめる。</summary>
  </entry>
  
  <entry>
    <title>ブラウザのクライアントサイド storage についてまとめる</title>
    <link
      href="https://blog.bokken.io/articles/2022-10-24/about-client-side-storage.html"
    />
    <id
    >https://blog.bokken.io/articles/2022-10-24/about-client-side-storage.html</id>
    <updated>2022-10-24T13:30:54.924Z</updated>
    <summary
      type="html"
    >&lt;a href=&#34;https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html&#34;&gt;前回の Anonymous iframe の記事&lt;/a&gt;で、storage について触れた。</summary>
  </entry>
  
  <entry>
    <title>Prerender2 という機能について</title>
    <link
      href="https://blog.bokken.io/articles/2022-11-24/about-prerender2.html"
    />
    <id>https://blog.bokken.io/articles/2022-11-24/about-prerender2.html</id>
    <updated>2022-11-24T06:03:55.903Z</updated>
    <summary
      type="html"
    >Prerender は Rendering を予め行い、ユーザのリンククリック時にあらかじめレンダリングされた結果を表示することで、閲覧体験を向上させる機能といえる。いずれにしても Legacy Prerender は一度こういった背景で取り下げられた。ここまで、Prerender2 の歴史について主に触れてきたが、次節からは Prerender2 をどのように使うのかを紹介する。</summary>
  </entry>
  
</feed>
