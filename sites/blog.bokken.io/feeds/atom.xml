<?xml version="1.0" encoding="utf-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <link
        rel="self"
        type="application/atom+xml"
        href="https://blog.bokken.io/feeds/atom.xml"
    />
  <title>blog.bokken.io</title>
    <link href="https://blog.bokken.io" />
    <updated />
    <author>
        <name>bokken</name>
    </author>
    <id>https://blog.bokken.io</id>


    <entry>
        <title>Progressive Web App 化する最低限の設定</title>
        <link
            href="https://blog.bokken.io/articles/2020-10-26/how-to-develop-minimal-pwa-app.html"
        />
        <id>https://blog.bokken.io/articles/2020-10-26/how-to-develop-minimal-pwa-app.html</id>
        <updated>2020-10-25T15:20:12.449Z</updated>
        <summary
            type="html"
        >Progressive Web App (PWA) の勉強がてら
            &lt;code&gt;https://blog.bokken.io&lt;/code&gt; を PWA 化した。本記事では、その内容をまとめておきたい。</summary>
    </entry>

    <entry>
        <title>Web サイトとして記載しておくべきプライバシーポリシーは何か</title>
        <link
            href="https://blog.bokken.io/articles/2020-10-05/privacy-policy-note.html"
        />
        <id>https://blog.bokken.io/articles/2020-10-05/privacy-policy-note.html</id>
        <updated>2020-10-11T14:10:01.421Z</updated>
        <summary
            type="html"
        >自分自身で Web サイトを作る際に、プライバシーポリシーをどのように扱うべきか、どのように記載するのがよいのかを考えて記載することとした。昨今の
            GDPR などと合わせて最終的にどのようなプライバシーポリシーとなったのかを紹介したい。</summary>
    </entry>

    <entry>
        <title>HTML parser を書いてるときに出会った Web 標準仕様の話</title>
        <link
            href="https://blog.bokken.io/articles/2020-09-30/html-parser-good-story.html"
        />
        <id>https://blog.bokken.io/articles/2020-09-30/html-parser-good-story.html</id>
        <updated>2020-10-01T21:55:44.591Z</updated>
        <summary
            type="html"
        >ブラウザをスクラッチで書いている。そのときに HTML の標準を読みながらブラウザを書
            いているそのときに仕様の不備のように疑われる挙動に出会った。内容について調査しているうちにということを再認識できたので、その内容について紹介したい。</summary>
    </entry>

    <entry>
        <title>生産性アップのための一工夫</title>
        <link
            href="https://blog.bokken.io/articles/2020-09-20/my-awesome-tools.html"
        />
        <id>https://blog.bokken.io/articles/2020-09-20/my-awesome-tools.html</id>
        <updated>2020-09-20T07:03:20.594Z</updated>
        <summary
            type="html"
        >最近生産性アップのためにやっていてよかったなと思うことがあったので紹介したい。要点は下記である。プロジェクト内での開発において、特定のコマンド列による操作を繰り返すことがよくある。例えば
            DB の初期データのインサート、テストコマンドの実行などである。コマンド列にすると下記のようなコマンドである。</summary>
    </entry>

    <entry>
        <title>Weblog をはじめる</title>
        <link href="https://blog.bokken.io/articles/2020-09-06/hello-world.html" />
        <id>https://blog.bokken.io/articles/2020-09-06/hello-world.html</id>
        <updated>2020-09-19T17:54:07.280Z</updated>
        <summary
            type="html"
        >もともと&lt;a
            href=&#34;https://negi-works.hatenablog.com/&#34;&gt;昔にブログ&lt;/a&gt;を書いていたが、
            ブログとしてアウトプットをする時間を取らず更新が滞ってしまっていた。</summary>
    </entry>

    <entry>
        <title>Chromium をビルド・テストする方法とその実行時間の備忘録</title>
        <link
            href="https://blog.bokken.io/articles/2021-02-28/how-to-build-chromium.html"
        />
        <id>https://blog.bokken.io/articles/2021-02-28/how-to-build-chromium.html</id>
        <updated>2021-02-28T14:05:32.978Z</updated>
        <summary
            type="html"
        >趣味でブラウザを作っている延長で、 Chromium
            をビルドしてテストを走らせて遊んでいる。その際、ビルド、実行に必要なリンクが各所にあって難しいなと感じたので、この記事にまとめて備忘録としておきたい。</summary>
    </entry>

    <entry>
        <title>Progressive Web App 化する最低限の設定</title>
        <link
            href="https://blog.bokken.io/articles/2021-02-28/how-to-develop-minimal-pwa-app.html"
        />
        <id>https://blog.bokken.io/articles/2021-02-28/how-to-develop-minimal-pwa-app.html</id>
        <updated>2021-02-28T13:58:22.052Z</updated>
        <summary
            type="html"
        >趣味でブラウザを作っている延長で、 Chromium
            をビルドしてテストを走らせて遊んでいる。その際、ビルド、実行に必要なリンクが各所にあって難しいなと感じたので、この記事にまとめて備忘録としておきたい。</summary>
    </entry>

    <entry>
        <title>Google Chrome の omnibox カスタム検索エンジンが使えなくなったと感じたときの tips</title>
        <link
            href="https://blog.bokken.io/articles/2021-03-04/omnibox-custom-search-engine.html"
        />
        <id>https://blog.bokken.io/articles/2021-03-04/omnibox-custom-search-engine.html</id>
        <updated>2021-08-16T01:03:25.366Z</updated>
        <summary
            type="html"
        >結論からいうと &lt;code&gt;chrome://flags&lt;/code&gt; の &lt;code&gt;Omnibox keyword
            search button&lt;/code&gt; の設定が enable
            になってしまったからだった。設定を戻せば引き続き使える。アップデートによって実験的に機能をいくつかのユーザに公開しているのでその影響なのだろう。</summary>
    </entry>

    <entry>
        <title>2021年の振り返り</title>
        <link
            href="https://blog.bokken.io/articles/2021-12-30/lookback-2021.html"
        />
        <id>https://blog.bokken.io/articles/2021-12-30/lookback-2021.html</id>
        <updated>2021-12-30T04:27:11.988Z</updated>
        <summary type="html">2021年がもう終わろうとしているので振り返りをしたい。
            テックよりの話とライフイベントよりな話の両方でつらつらとまとめてみる。例年は本を読んだり、自分でプログラムを書いたりして一人で満足しているだけだったのだが、
            今年はいつもに比べて対外的な活動、人と関わりがある活動を進めていこうとしてもがいていた年だった。</summary>
    </entry>

    <entry>
        <title>きれいなコミットメッセージとは</title>
        <link
            href="https://blog.bokken.io/articles/2022-01-01/a-clean-commit-message.html"
        />
        <id>https://blog.bokken.io/articles/2022-01-01/a-clean-commit-message.html</id>
        <updated>2021-12-31T16:49:37.912Z</updated>
        <summary
            type="html"
        >最近、大きなコードベースを触る機会が増えてきれいなコミットメッセージについて考える事が増えた。
            きれいなコミットメッセージの定義は様々あると思うが、筆者は下記がきれいなコミットメッセージに必要なことだと考えている。</summary>
    </entry>

    <entry>
        <title>Chromium のバグを直しているときに知った HTTP ヘッダ関連の Web 標準の読み方</title>
        <link
            href="https://blog.bokken.io/articles/2022-02-28/investigate-chromium-cors-header-parse-failure.html"
        />
        <id>
            https://blog.bokken.io/articles/2022-02-28/investigate-chromium-cors-header-parse-failure.html</id>
        <updated>2022-02-28T12:55:53.455Z</updated>
        <summary type="html">
            最近、Chromium へのコントリビューション活動をしている。
            直近で Chromium のバグ fix のために仕様を読んでいて面白いなと思ったことがあったので共有したい。具体的に取り組んでいたのは、&lt;a
            href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=978146&#34;&gt;こちらのバグ&lt;/a&gt;である。</summary>
    </entry>

    <entry>
        <title>Web 標準を読む会</title>
        <link
            href="https://blog.bokken.io/articles/2022-03-31/whats-new-2022-03.html"
        />
        <id>https://blog.bokken.io/articles/2022-03-31/whats-new-2022-03.html</id>
        <updated>2022-03-31T13:52:35.516Z</updated>
        <summary
            type="html"
        >最近、Web 標準を読む会を開催して、複数人で Web 標準を読んでいる。やっていることはシンプルで、 &lt;a
            href=&#34;https://fetch.spec.whatwg.org/&#34;&gt;Fetch Standard&lt;/a&gt; を DeepL
            で日本語に翻訳している文章を参加者が順番に音読する。
            そしてその内容を読み解くというものだ。</summary>
    </entry>

    <entry>
        <title>働いているけど Google Summer of Code (GSoC) に応募した</title>
        <link
            href="https://blog.bokken.io/articles/2022-04-30/apply-google-summer-of-code.html"
        />
        <id>https://blog.bokken.io/articles/2022-04-30/apply-google-summer-of-code.html</id>
        <updated>2022-04-30T08:00:59.735Z</updated>
        <summary
            type="html"
        >今年から &lt;a
            href=&#34;https://opensource.googleblog.com/2021/11/expanding-google-summer-of-code-in-2022.html&#34;&gt;Google
            Summer of Code (GSoC) の応募制限が緩和&lt;/a&gt;されて、18 歳以上であれば、
            誰でも応募できるようになった。</summary>
    </entry>

    <entry>
        <title>Chromium の開発時に便利な Visual Studio Code の機能拡張を作った</title>
        <link
            href="https://blog.bokken.io/articles/2022-05-21/vscode-extension-chromium-code-search-permalink.html"
        />
        <id>
            https://blog.bokken.io/articles/2022-05-21/vscode-extension-chromium-code-search-permalink.html</id>
        <updated>2022-05-21T07:10:06.863Z</updated>
        <summary
            type="html"
        >Chromium の開発をしているときに、他の人にコードのどの部分かを説明したいことがある。そんなときに GitHub では、&lt;a
            href=&#34;https://marketplace.visualstudio.com/items?itemName=mattlott.copy-github-url&#34;&gt;Copy
            GitHub URL&lt;/a&gt;というプラグインで、VS Code で編集しているコードのパーマリンクを取得できるため、このパーマリンクを共有すればよい。</summary>
    </entry>

    <entry>
        <title>HTTP RFC Publication Study で HTTP/3 について発表しました</title>
        <link
            href="https://blog.bokken.io/articles/2022-06-30/http-rfc-publication-study.html"
        />
        <id>https://blog.bokken.io/articles/2022-06-30/http-rfc-publication-study.html</id>
        <updated>2022-06-30T10:06:43.428Z</updated>
        <summary
            type="html"
        >&lt;a href=&#34;https://web-study.connpass.com/event/250730/&#34;&gt;HTTP RFC
            Publication Study&lt;/a&gt;に発表者として参加した。</summary>
    </entry>

    <entry>
        <title>GitHub permalink の URL の仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2022-07-31/research-on-github-permalink.html"
        />
        <id>https://blog.bokken.io/articles/2022-07-31/research-on-github-permalink.html</id>
        <updated>2022-07-31T14:21:50.950Z</updated>
        <summary
            type="html"
        >筆者は VS Code で &lt;a
            href=&#34;https://marketplace.visualstudio.com/items?itemName=mattlott.copy-github-url&#34;&gt;GitHub
            の permalink をコピーできる拡張機能&lt;/a&gt;をよく使っている。</summary>
    </entry>

    <entry>
        <title>Chromium のコミットを検索できるサイトを作った</title>
        <link
            href="https://blog.bokken.io/articles/2022-08-31/chromium-commits.html"
        />
        <id>https://blog.bokken.io/articles/2022-08-31/chromium-commits.html</id>
        <updated>2022-08-31T10:40:08.351Z</updated>
        <summary
            type="html"
        >&lt;a href=&#34;https://chromium-news.vercel.app&#34;&gt;Chromium
            News&lt;/a&gt; というサイトを作りました。
            現状は Chromium の commit を検索できるだけのサイトだが、今後様々な情報ソースを集約したり、それらをまとめる記事を書ければと思っている。</summary>
    </entry>

    <entry>
        <title>Anonymous iframe とは</title>
        <link
            href="https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html"
        />
        <id>https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html</id>
        <updated>2022-09-26T14:40:19.020Z</updated>
        <summary
            type="html"
        >&lt;a href=&#34;https://wicg.github.io/anonymous-iframe/&#34;&gt;Anonymous
            iframe&lt;/a&gt; という仕様がある。
            この仕様が何を問題意識として、何を解決するための仕様なのかをまとめる。</summary>
    </entry>

    <entry>
        <title>ブラウザのクライアントサイド storage についてまとめる</title>
        <link
            href="https://blog.bokken.io/articles/2022-10-24/about-client-side-storage.html"
        />
        <id>https://blog.bokken.io/articles/2022-10-24/about-client-side-storage.html</id>
        <updated>2022-10-24T13:30:54.924Z</updated>
        <summary
            type="html"
        >&lt;a
            href=&#34;https://blog.bokken.io/articles/2022-09-27/about-anonymous-iframe.html&#34;&gt;前回の
            Anonymous iframe の記事&lt;/a&gt;で、storage について触れた。</summary>
    </entry>

    <entry>
        <title>Prerender2 という機能について</title>
        <link
            href="https://blog.bokken.io/articles/2022-11-24/about-prerender2.html"
        />
        <id>https://blog.bokken.io/articles/2022-11-24/about-prerender2.html</id>
        <updated>2022-11-24T06:03:55.903Z</updated>
        <summary
            type="html"
        >Prerender は Rendering
            を予め行い、ユーザのリンククリック時にあらかじめレンダリングされた結果を表示することで、閲覧体験を向上させる機能といえる。いずれにしても Legacy Prerender
            は一度こういった背景で取り下げられた。ここまで、Prerender2 の歴史について主に触れてきたが、次節からは Prerender2 をどのように使うのかを紹介する。</summary>
    </entry>

    <entry>
        <title>サードパーティ Cookie をブロックする制限を緩和する CHIPS という仕様について</title>
        <link href="https://blog.bokken.io/articles/2022-12-30/about-chips.html" />
        <id>https://blog.bokken.io/articles/2022-12-30/about-chips.html</id>
        <updated>2022-12-30T08:04:49.967Z</updated>
        <summary
            type="html"
        >3rd Party Cookie をブロックする制限を緩和するための仕様である CHIPS が策定されている。近年、ユーザの Privacy
            の向上を目的として 3rd Party Cookie をブロックする流れがある。cross site でユーザトラッキングを提供する多くのツールは 3rd Party
            Cookie を使っているため、3rd Party Cookie をブロックすることで解決</summary>
    </entry>

    <entry>
        <title>不正なリクエストを弾くために使える Fetch Metadata という仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2023-01-28/about-fetch-metadata.html"
        />
        <id>https://blog.bokken.io/articles/2023-01-28/about-fetch-metadata.html</id>
        <updated>2023-01-28T00:03:09.126Z</updated>
        <summary
            type="html"
        >リクエストのコンテキストをサーバ側に伝えることで、サーバ側でリクエストが危険なものかを判別するための Fetch Metadata Request
            Headers という仕様がある。今回、このヘッダがどういったものなのかについて Fetch Metadata Request Headers
            を読んだり、周辺のドキュメントを読んでまとめる。Sec-Fetch-
            はクライアント側では特に何も設定する必要はなく、サポートされていればブラウザによってリクエストに自動でヘッダに付与されサーバに送付されるサーバは送られてきた Fetch
            Metadata をもとに CSRF などの、攻撃の可能性があるリクエ</summary>
    </entry>

    <entry>
        <title>不正なリクエストを弾くために使える Fetch Metadata という仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2023-01-29/about-fetch-metadata.html"
        />
        <id>https://blog.bokken.io/articles/2023-01-29/about-fetch-metadata.html</id>
        <updated>2023-01-29T00:58:07.612Z</updated>
        <summary
            type="html"
        >リクエストのコンテキストをサーバ側に伝えることで、サーバ側でリクエストが危険なものかを判別するための Fetch Metadata Request
            Headers という仕様がある。今回、このヘッダがどういったものなのかについて Fetch Metadata Request Headers
            を読んだり、周辺のドキュメントを読んでまとめる。Fetch Metadata
            ヘッダはクライアント側では特に何も設定する必要はなく、サポートされていればブラウザによってリクエストに自動的にヘッダに付与されサーバに送付されるサーバは送られてきた Fetch
            Metadata をもとに CSRF などの、攻撃の可</summary>
    </entry>

    <entry>
        <title>クライアントサイドの Cookie などのデータを消去するための Clear Site Data という仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2023-02-28/about-clear-site-data.html"
        />
        <id>https://blog.bokken.io/articles/2023-02-28/about-clear-site-data.html</id>
        <updated>2023-02-27T14:04:46.323Z</updated>
        <summary
            type="html"
        >Clear-Site-Data というクライアントサイドのデータを削除するためのヘッダがある。最近 Safari の Beta Release
            にリリースされ、もうすぐ主要ブラウザベンダで実装が出揃う形になる。この記事では、Clear Site Data とはどういう仕様なのかをまとめる。Web
            アプリケーションでは、オフライン時にも利用できるようにリソース (データ) をキャッシュしたり、パフォーマンスを高めるため、 local マシンにリソース (データ)
            を保持することがある。また、サービスをログインするのに Cookie にセッション情報 (データ) を保持したりする。これらの保存された</summary>
    </entry>

    <entry>
        <title>IETF 116 Yokohama に参加しました</title>
        <link
            href="https://blog.bokken.io/articles/2023-03-31/my-first-ietf.html"
        />
        <id>https://blog.bokken.io/articles/2023-03-31/my-first-ietf.html</id>
        <updated>2023-03-31T10:48:06.856Z</updated>
        <summary
            type="html"
        >IETF 116 Yokohama に参加した。 私としてははじめての IETF
            参加だった。今後の参加者たちの参考にどういった体験だったのか記録として残しておきたい。私は普段 Web
            フロントエンドの開発をしているため、プロトコル関連の実装をしている訳ではない。なので IETF で議論されされている内容に関して専門家ではない。趣味で少し HTTP/3 や
            QUIC
            を勉強している程度である。そういった人物が行った場合にどうだったのかが記載されている。インターネットの最前線を見られたことに感動したドラフトは読んだ方が楽しめる読まなくても雰囲気は分かるが内容は分からない未予習者には
            BoF がおす</summary>
    </entry>

    <entry>
        <title>Web サイトのパフォーマンスを計測するためのタイミング関係の API について</title>
        <link
            href="https://blog.bokken.io/articles/2023-04-30/timing-related-apis.html"
        />
        <id>https://blog.bokken.io/articles/2023-04-30/timing-related-apis.html</id>
        <updated>2023-04-30T13:39:19.214Z</updated>
        <summary
            type="html"
        >Web サイトのパフォーマンスを計測するための API がいくつか提供されている。ユーザ体験を向上させるのはもちろん。Google は Core Web
            Vitals を検索エンジン上で考慮すると述べている。高精度のい時間情報が必要。ただ、高精度の時間の情報は脆弱性にもなり得る。Spectre や Meltdown。このことから
            Web サイトのパフォーマンスを把握するのは非常に重要であるといえる。Performance Observer が定義されている。こちらの Performance
            Observer に計測したいメトリクスを定義することで、そのメトリクスを Observe して知らせてく</summary>
    </entry>

    <entry>
        <title>パスワード変更用のURLを明示すためのwell-known URL for Changing Passwordsという仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2023-05-31/about-well-known-change-password.html"
        />
        <id>https://blog.bokken.io/articles/2023-05-31/about-well-known-change-password.html</id>
        <updated>2023-05-31T05:57:18.452Z</updated>
        <summary
            type="html"
        >パスワード変更のためのURLを示すための、A Well-Known URL for Changing Passwords
            という仕様が存在する。この仕様は主にクライアントサイドのパスワード管理ツールで使われる想定の仕様だ。本記事ではこの仕様がどういうものか、どういった利点があるのかについてまとめる。パスワード管理ツールはクロスサイトでのパスワードの再利用を防いだり、オートフィルをしてユーザビリティを高めてくれる良いツールだ。
            ブラウザにもパスワード管理ツールが搭載されていたり、有名どころでは1PasswordやBitwardenのようなツールがある。これらのツールの中にはパスワードの強度を教えて</summary>
    </entry>

    <entry>
        <title>Prerender2 のキャッシュを更新し続けるためのヘルパーと HTTP Cache を合わせて活用する方法</title>
        <link
            href="https://blog.bokken.io/articles/2023-06-30/about-prerender2-refreshment.html"
        />
        <id>https://blog.bokken.io/articles/2023-06-30/about-prerender2-refreshment.html</id>
        <updated>2023-06-30T14:49:09.403Z</updated>
        <summary
            type="html"
        >本記事ではPrerender2で事前描画したページを更新し続けるときに、少しだけ便利なヘルパーを作ったので、Prerender2の挙動とあわせて紹介する。Prerender2
            という機能が Chrome/Chromium で実装されている。この Prerender2
            という機能は、リンク先のページを事前描画する機能である。リンク先への遷移が一瞬で完了するため、高速な閲覧体験をユーザに提供できる機能だ。Prerender2
            によって、例えば非常に重い画像が複数あるページであっても(事前描画が終わっていれば)一瞬で表示される。その簡単なデモが次の例だ。最初のデモでは Prerender2を使わずに重</summary>
    </entry>

    <entry>
        <title>ブラウザの Storage Partitioning について</title>
        <link
            href="https://blog.bokken.io/articles/2023-07-31/about-storage-partitioning.html"
        />
        <id>https://blog.bokken.io/articles/2023-07-31/about-storage-partitioning.html</id>
        <updated>2023-07-31T12:32:11.383Z</updated>
        <summary
            type="html"
        >ブラウザは様々なストレージや内部状態を持っている。例えば、Cookieなどがわかりやすい例だろう。
            この内部状態を元にoriginと通信をするが、セキュリティやプライバシーの観点から、この内部状態は許可されていない異なる origin
            へ漏れないようにしなければいけない。では、実際にどういったストレージや内部状態を持っていて、それをどのように漏洩しないようにしているのか。この記事では、W3C の
            Privacy Community Group で検討されている Client-Side Storage Partitioning
            で検討されている内容について紹介して、それを概観する。各種ストレージや</summary>
    </entry>

    <entry>
        <title>Web 好きにはたまらない Weaving The Web を読んで</title>
        <link
            href="https://blog.bokken.io/articles/2023-08-31/about-weaving-the-web.html"
        />
        <id>https://blog.bokken.io/articles/2023-08-31/about-weaving-the-web.html</id>
        <updated>2023-08-31T13:55:43.111Z</updated>
        <summary
            type="html"
        >とあるきっかけでずっと積んでしまっていた「Weaving the Web: The Original Design and Ultimate
            Destiny of the World Wide Web」(以下、Weaving the Web)
            を読んだ。読んだ内容を忘れないように備忘録として書き留めておく。「Weaving the Web」はひとことで言うなら、Web 好きにはたまらない本だ。著者は Tim
            Berners-Lee 氏と Mark Fischetti 氏で、この本には Web の発明者である Tim Berners-Lee 氏と World Wide Web
            の歴史について事細か</summary>
    </entry>

    <entry>
        <title>Software Design 10 月号に HTTP/3 の記事を寄稿しました</title>
        <link
            href="https://blog.bokken.io/articles/2023-09-30/software-design-2023-10.html"
        />
        <id>https://blog.bokken.io/articles/2023-09-30/software-design-2023-10.html</id>
        <updated>2023-09-30T12:44:23.902Z</updated>
        <summary
            type="html"
        >Software Design 2023 年 10 月号の HTTP/3
            の特集の第一章に寄稿する機会を頂きました。https://gihyo.jp/magazine/SD/archive/2023/202310第一章の内容は、HTTP の歴史と
            HTTP/3 の特徴についてまとめたものになっています。今回、執筆にあたって、調べれば調べるほど HTTP
            についてまとめたいことが湧いてきてしまって、前回の記事で紹介した『Weaving The
            Web』を読んだり、インターネットの資料を読み漁ったりしました。手前味噌ではありますが、短いページに HTTP の歴史と HTTP/3 の特徴を詰め込むこと</summary>
    </entry>

    <entry>
        <title>サードパーティ Cookie の制限を緩和する Related Website Sets (First-Party Sets) という仕様について</title>
        <link
            href="https://blog.bokken.io/articles/2023-10-31/about-related-website-sets.html"
        />
        <id>https://blog.bokken.io/articles/2023-10-31/about-related-website-sets.html</id>
        <updated>2023-10-31T12:49:04.763Z</updated>
        <summary
            type="html"
        >現在 Web ブラウザでは、プライバシーの観点から、サードパーティ Cookie をブロックする流れがある。しかし、Web
            コンテンツプロバイダーは複数のドメインでコンテンツを提供していて Cookie
            を共有したいことがある。例えば、アプリケーションごとにドメインを分けるケースだったり、アセットのためにドメインを分けているが Cookie を
            メインのサイトと共有したいケースがあるだろう。そういった異なるドメイン間において、サードパーティ Cookie を許可できるのが Related Website Sets
            (First-Party Sets)という仕様だ。もともとは、First-Part</summary>
    </entry>

    <entry>
        <title>Chromium の Expires: 0 の取り扱いを修正したときに学んだこと</title>
        <link
            href="https://blog.bokken.io/articles/2023-11-30/about-http-expires-0.html"
        />
        <id>https://blog.bokken.io/articles/2023-11-30/about-http-expires-0.html</id>
        <updated>2023-11-30T01:17:25.768Z</updated>
        <summary
            type="html"
        >ことのはじまりは https://crbug.com/853508 を見つけたことだった。この bug は HTTP Caching
            に関わる話で、Expires: 0 がレスポンスに付与されていた際には、ブラウザはこのキャッシュを expired なものとして扱わなければいけないというものだった。A
            cache recipient MUST interpret invalid date formats, especially the value
            &amp;quot;0&amp;quot;, as representing a time in the past (i.e., &amp;quot;already expi</summary>
    </entry>

    <entry>
        <title>2023年の振り返り</title>
        <link
            href="https://blog.bokken.io/articles/2023-12-29/lookback-2023.html"
        />
        <id>https://blog.bokken.io/articles/2023-12-29/lookback-2023.html</id>
        <updated>2023-12-29T04:28:02.870Z</updated>
        <summary
            type="html"
        >
            今年ももう終わってしまうので、今年にあったことで印象的だったことを振り返る。今年もなんとか毎月ブログ記事を毎月出せた。すべて月末に偏っているのは、普通に時間がかかるのと、ある程度記事を温めているからというのもあるが、締め切り駆動にあってるからというのもある。来年は月初に出して月末はゆうゆうと過ごしたい。ブログ記事を毎月書いた今年もなんとか毎月ブログ記事を毎月出せた。すべて月末に偏っているのは、普通に時間がかかるのと、ある程度記事を温めているからというのもあるが、締め切り駆動にあってるからというのもある。来年は月初に出して月末はゆうゆうと過ごしたい。今年もChromiumにパッチを送れた。合わせて</summary>
    </entry>

    <entry>
        <title>Software Design 2024年2月号から「あなたの知らないChromeの世界」の連載を始めました</title>
        <link
            href="https://blog.bokken.io/articles/2024-01-31/software-design-2024-02.html"
        />
        <id>https://blog.bokken.io/articles/2024-01-31/software-design-2024-02.html</id>
        <updated>2024-01-31T10:16:04.433Z</updated>
        <summary
            type="html"
        >
            今回、Chromeとブラウザ好きが幸いして、Software
            Design誌にて「あなたの知らないChromeの世界」の連載をさせていただくことになりました。連載の回数は6回〜12回程度とあまりしっかりきまっていないのですが、Chromeを中心にブラウザの話をお伝えできればと思っています。Software
            Designは、設計やアーキテクチャ、言語やクラウドの利用方法といった実務ですぐに役立つような記事が多い中で、果たして実務に役に立たないChromeやブラウザの歴史や、細かい中身の話が面白いと思ってもらえるのか少し不安はありますが、頑張って最後まで連載を終えられるように頑張っていきたいと思いま</summary>
    </entry>

    <entry>
        <title>Chromiumのビルドオプションの備忘録</title>
        <link
            href="https://blog.bokken.io/articles/2024-02-29/chromium-build-option.html"
        />
        <id>https://blog.bokken.io/articles/2024-02-29/chromium-build-option.html</id>
        <updated>2024-02-29T12:53:37.093Z</updated>
        <summary
            type="html"
        >
            以前の記事でChromiumのビルドをする際のコマンドを備忘録のためにまとめた。基本的にはデフォルトの設定を使っているのだが、デバッガと併用して使う場合には別途設定ファイルを変更して利用する必要があるため、その内容についてまとめる。現状、デフォルトビルドの際には次のようなオプションを使用している。これでも最低限、動作確認やテストの実行などはできる。デフォルトの動作の確認以外にもデバッガを使いたいときがある。そういったときに上記の設定だとブレイクポイントが飛び飛びで止まってしまい期待する動作をしてくれない。その際はデバッグビルドの際には次の設定を使用している。差分はis_debugとsymbol_</summary>
    </entry>

    <entry>
        <title>Chromiumのコミットを検索するサービスを停止します</title>
        <link
            href="https://blog.bokken.io/articles/2024-03-31/deprecate-chromium-news.html"
        />
        <id>https://blog.bokken.io/articles/2024-03-31/deprecate-chromium-news.html</id>
        <updated>2024-03-30T15:27:08.583Z</updated>
        <summary
            type="html"
        >
            ずいぶん昔に「Chromium
            のコミットを検索できるサイトを作った」という記事を書きましたが、そのサービスを一度停止します。理由としてはそのサービスでは内部的にPlanetScaleを使っており、無料で使えるHobby
            Planが2024年4月8日以降に使えなくなってしまうためです。今後もしかしたら他の技術構成で再開するかもしれないし、再開しないかもしれません。もしも使って頂いていた方がいたら申し訳ありません。今後もなにか新しいサービスを作った際にはお知らせしようと思います。</summary>
    </entry>

    <entry>
        <title>「あなたの知らないChromeの世界」の連載終了によせて</title>
        <link
            href="https://blog.bokken.io/articles/2024-10-18/unknown-chrome-world.html"
        />
        <id>https://blog.bokken.io/articles/2024-10-18/unknown-chrome-world.html</id>
        <updated />
        <summary
            type="html"
        >今月のSoftware
            Design11月号で、「あなたの知らないChromeの世界」の連載が無事に終了しました。至らない点もあったかもしれませんが、無事に連載を終えることができてほっとしています。読んでくださった方がいたら、ありがとうございました。「あなたの知らないChromeの世界」では次のトピックについて紹介しました。「Google
            Chromeの登場」, Software Design 2024年2月号, 2024年1月18日,
            https://gihyo.jp/magazine/SD/archive/2024/202402「Chromiumとは」, Software Design 20</summary>
    </entry>

</feed>
